name: Build and Push Blazor App Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  # Adjust based on your project

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build the App
        run: dotnet build --configuration Release --no-restore

      - name: Run Tests
        run: dotnet test --no-build --configuration Release

      - name: Publish Blazor App
        run: dotnet publish -c Release -o publish_output

      # Extract version from .csproj
      - name: Get Version from .csproj
        id: get_version
        run: |
          VERSION=$(grep -oP '(?<=<Version>)(.*)(?=</Version>)' **/*.csproj)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      # Docker Authentication
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      # Check if Docker Image Exists on Docker Hub
      - name: Check if Docker Image Exists on Docker Hub
        id: check_image_exists
        run: |
          IMAGE_TAG="${{ env.DOCKER_HUB_USERNAME }}/blazor-frontend:${{ env.VERSION }}"
          API_URL="https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/blazor-frontend/tags/${{ env.VERSION }}"
          
          # Check if image tag exists by calling Docker Hub API
          response=$(curl -s -o /dev/null -w "%{http_code}" $API_URL)
          
          if [ "$response" -eq 200 ]; then
          echo "Image $IMAGE_TAG already exists. Rejecting build.";
          exit 1;  # Fail the pipeline if the image already exists
          else
          echo "Image $IMAGE_TAG does not exist. Proceeding with build.";
          fi
      
      # Build and Tag Frontend Image
      - name: Build Frontend Image
        run: docker build -t ${{ env.DOCKER_HUB_USERNAME }}/blazor-frontend:${{ env.VERSION }} .

      # Build and Tag Backend (Database) Image
      - name: Build Backend Image
        run: docker build -t ${{ env.DOCKER_HUB_USERNAME }}/blazor-backend:${{ env.VERSION }} .

      # Push Images to Docker Hub
      - name: Push Frontend Image
        run: docker push ${{ env.DOCKER_HUB_USERNAME }}/blazor-frontend:${{ env.VERSION }}

      - name: Push Backend Image
        run: docker push ${{ env.DOCKER_HUB_USERNAME }}/blazor-backend:${{ env.VERSION }}
